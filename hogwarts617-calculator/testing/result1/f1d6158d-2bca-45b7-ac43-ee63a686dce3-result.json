{"name": "test_div[division by zero]", "status": "broken", "statusDetails": {"message": "ZeroDivisionError: division by zero", "trace": "self = <testing.test_calculator.TestCalculator object at 0x03C12340>, c = 100, d = 0, divexpect = 1\n\n    @allure.story(\"除法运算测试\")\n    @pytest.mark.parametrize('c,d,divexpect', get_divdatas_calc()[0], ids=get_divdatas_calc()[1])\n    @pytest.mark.div\n    def test_div(self, c, d, divexpect):\n        try:\n            # calc = calculator()\n            # assert 1 == self.calc.div(1, 1)\n>           res = self.calc.div(c, d)\n\ntesting\\test_calculator.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pythoncode.calculator.calculator object at 0x03C12E38>, a = 100, b = 0\n\n    def div(self, a, b):\n>       return a / b\nE       ZeroDivisionError: division by zero\n\npythoncode\\calculator.py:9: ZeroDivisionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testing.test_calculator.TestCalculator object at 0x03C12340>, c = 100, d = 0, divexpect = 1\n\n    @allure.story(\"除法运算测试\")\n    @pytest.mark.parametrize('c,d,divexpect', get_divdatas_calc()[0], ids=get_divdatas_calc()[1])\n    @pytest.mark.div\n    def test_div(self, c, d, divexpect):\n        try:\n            # calc = calculator()\n            # assert 1 == self.calc.div(1, 1)\n            res = self.calc.div(c, d)\n        except Exception as e:\n            print(\"发生异常，异常信息{}，进行异常断言\".format(e))\n            assert str(e) == 'division by zero'\n    \n            with pytest.raises(TypeError) as e:\n>               res = self.calc.div(c, d)\n\ntesting\\test_calculator.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pythoncode.calculator.calculator object at 0x03C12E38>, a = 100, b = 0\n\n    def div(self, a, b):\n>       return a / b\nE       ZeroDivisionError: division by zero\n\npythoncode\\calculator.py:9: ZeroDivisionError"}, "parameters": [{"name": "c", "value": "100"}, {"name": "d", "value": "0"}, {"name": "divexpect", "value": "1"}], "start": 1624036048025, "stop": 1624036048026, "uuid": "755d67db-8bef-435c-89df-c86526f8f73f", "historyId": "bc843015088da1ff336f67fce66c9af3", "testCaseId": "00f43c99e69edabe02f02364c544f882", "fullName": "test_calculator.TestCalculator#test_div", "labels": [{"name": "story", "value": "除法运算测试"}, {"name": "feature", "value": "加法和除法测试"}, {"name": "tag", "value": "div"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "TestCalculator"}, {"name": "host", "value": "QKFZ-888"}, {"name": "thread", "value": "20268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_calculator"}]}